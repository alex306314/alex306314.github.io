I"!<blockquote>
  <p><a href="/2020/02/02/0.magento-menu.html">Magento 2 开发内容目录</a></p>
</blockquote>

<p>本文讨论如何创建一个索引器（Indexer）重建索引（Reindex）。Magento 2 索引中最主要的是索引器。为了代码演示我们继续使用 HelloWorld 模块。</p>

<p>Magento 系统使用索引来变换数据如产品、分类等进而提高店铺的性能。当数据变化时，变换的数据也必须同步更新或重建索引。Magento 使用非常精致的架构在很多数据表中存储大量的店铺数据（包括产品、价格、用户、店铺等数据）。为了优化店铺性能，Magento 使用索引器把累积的数据存储到特定数据表。</p>

<p>比如，你将一个产品的价格从￥8.99改到￥6.99，这时要让前台页面正常显示 Magento 就必须重建价格索引。</p>

<p>如果不使用索引，Magneto就必须实时计算每一个产品的价格——要计算的有客户购物车产品规则、批量价、折扣价、阶梯价等。这样产品的价格计算会花费很长时间，长时间的等待造成的结果可能就是消费者放弃购物。</p>

<p>创建自定义索引器步骤：</p>

<ul>
  <li>1 添加索引器配置文件</li>
  <li>2 添加 Mview 配置文件</li>
  <li>3 定义索引器类</li>
  <li>4 运行测试</li>
</ul>

<h2 id="添加索引器配置文件">添加索引器配置文件</h2>

<p>文件： <code class="language-plaintext highlighter-rouge">app/code/Aqrun/HelloWorld/etc/indexer.xml</code></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0"?&gt;</span>
<span class="nt">&lt;config</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="na">xsi:noNamespaceSchemaLocation=</span><span class="s">"urn:magento:framework:Indexer/etc/indexer.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;indexer</span> <span class="na">id=</span><span class="s">"aqrun_helloworld_indexer"</span> 
        <span class="na">view_id=</span><span class="s">"aqrun_helloworld_indexer"</span>
        <span class="na">class=</span><span class="s">"Aqrun\HelloWorld\Model\Indexer\Test"</span>
        <span class="nt">&gt;</span>
        <span class="nt">&lt;title</span> <span class="na">translate=</span><span class="s">"true"</span><span class="nt">&gt;</span>Aqrun HelloWorld Indexer<span class="nt">&lt;/title&gt;</span>
        <span class="nt">&lt;description</span> <span class="na">translate=</span><span class="s">"true"</span><span class="nt">&gt;</span>你好世界自定义索引器<span class="nt">&lt;/description&gt;</span>
    <span class="nt">&lt;/indexer&gt;</span>
<span class="nt">&lt;/config&gt;</span>
</code></pre></div></div>

<p>上面代码中我们使用 indexer 节点定义了一个新的索引器：</p>

<ul>
  <li>id 属性是索引器的唯一标识。可以在命令行使用这个ID来检查状态、模式或重建对应的索引</li>
  <li>view_id 是视图元素的ID，视图元素会在 mview 配置文件中进行定义</li>
  <li>class 属性指定我们要处理索引方法的类名</li>
</ul>

<p>简单的索引还有两个子节点：</p>

<ul>
  <li>title 节点是显示在索引器列表中的文字</li>
  <li>description 节点索引器列表中的说明文字</li>
</ul>

<h2 id="添加-mview-配置文件">添加 Mview 配置文件</h2>

<p>mview.xml 文件是用于跟踪指定的实体在数据库中的变化，并运行指定的方法处理这些变化</p>

<p>文件： <code class="language-plaintext highlighter-rouge">app/code/Aqrun/HelloWorld/etc/mview.xml</code></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;config</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
        <span class="na">xsi:noNamespaceSchemaLocation=</span><span class="s">"urn:magento:framework:Mview/etc/mview.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;view</span> <span class="na">id=</span><span class="s">"aqrun_helloworld_indexer"</span>
          <span class="na">class=</span><span class="s">"Aqrun\HelloWorld\Model\Indexer\Test"</span>
          <span class="na">group=</span><span class="s">"indexer"</span> <span class="nt">&gt;</span>
        <span class="nt">&lt;subscriptions&gt;</span>
            <span class="nt">&lt;table</span> <span class="na">name=</span><span class="s">"catalog_product_entity"</span> <span class="na">entity_column=</span><span class="s">"entity_id"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/subscription&gt;</span>
    <span class="nt">&lt;/view&gt;</span>
<span class="nt">&lt;/config&gt;</span>
</code></pre></div></div>

<p>代码中定义了有ID属性的 view 节点，ID属性关联索引器，class 属性指定了实现有 <code class="language-plaintext highlighter-rouge">execute()</code> 方法的类。这个方法会在订阅的数据表有更新时执行。</p>

<p>定义数据表需要用到表名和表的字段，这些参数也会传给 <code class="language-plaintext highlighter-rouge">execute()</code> 方法。本例我们指定的表是 <code class="language-plaintext highlighter-rouge">catalog_product_entity</code>。因此无论何时不管是一个还是多个产品被保存，都会执行 Aqrun\HelloWorld\Model\Indexer\Test 类的 execute() 方法。</p>

<h2 id="定义索引器类">定义索引器类</h2>

<p>根据上面的 indexer.xml 和 mview.xml 配置文件，定义索引器为： Aqrun\HelloWorld\Model\Indexer\Test</p>

<p>文件： <code class="language-plaintext highlighter-rouge">app/code/Aqrun/HelloWrold/Model/Indexer/Test.php</code></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kn">namespace</span> <span class="nn">Aqrun\HelloWorld\Model\Indexer</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">Test</span> <span class="k">implements</span> <span class="err">\</span><span class="nc">Magento\Framework\Indexer\ActionInterface</span><span class="p">,</span>
    <span class="err">\</span><span class="nc">Magento\Framework\Mview\ActionInterface</span>
<span class="p">{</span>
    <span class="cd">/**
     * 被 mview 调用，允许在 "Update on schedule" 模式下处理索引
     * @param int[] $ids
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">execute</span><span class="p">(</span><span class="nv">$ids</span><span class="p">){</span>
        <span class="c1">//code</span>
    <span class="p">}</span>

    <span class="cd">/**
     * 会处理所有的数据并重建索引
     * 在使用命令行重建索引时会执行
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">executeFull</span><span class="p">(){</span>
        <span class="c1">//code</span>
    <span class="p">}</span>

    <span class="cd">/**
     * 作用于一组实体的变化（如批量操作）
     * @param array $ids
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">executeList</span><span class="p">(</span><span class="kt">array</span> <span class="nv">$ids</span><span class="p">){</span>
        <span class="c1">//code</span>
    <span class="p">}</span>

    <span class="cd">/**
     * 作用于单个实体
     * @param int $id
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">executeRow</span><span class="p">(</span><span class="nv">$id</span><span class="p">){</span>
        <span class="c1">// code</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>你可以在索引器类方法中添加代码向索引器表更新数据</p>

<p>接下来，清空缓存并到后台菜单  system &gt; Index Management 查看代码结果</p>

<p><img src="images/12-custom-indexer.png" alt="custom indexer" /></p>

<h2 id="重建索引使用命令">重建索引使用命令：</h2>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php bin/magento indexer:redinex
</code></pre></div></div>
:ET