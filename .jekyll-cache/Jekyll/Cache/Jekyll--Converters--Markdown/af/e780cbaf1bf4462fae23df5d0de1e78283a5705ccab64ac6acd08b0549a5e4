I"ë<p>So recently Iâ€™ve been working with PHP 5.4 a LOT. Unfortunately Ubuntu (my main dev environment) is behind the times. So Iâ€™m resorting to compiling PHP manually.</p>

<p>Not a daunting as it may first appear. The really tricky part is working out your dependencies and configure script.</p>

<p>Hence the reason for this post as a reminder for myself and others that may want to do a quick compile. (I would recommend that if your compiling for a production/live environment that you make sure you understand what it is your compiling though before just using whatâ€™s here)</p>

<p>So where to start. Dependencies first I think</p>

<p>Ubuntu allows you to install dependencies for building source apt-get build-deps. We will use this and install any extras we may need.</p>

<pre class="line-numbers">
    <code class="language-shell">

    apt-get install \
    libxml2 \
    libxml2-dev \
    libssl-dev \
    pkg-config \
    curl \
    libcurl4-nss-dev \
    enchant \
    libenchant-dev \
    libjpeg8 \
    libjpeg8-dev \
    libpng12-0 \
    libpng12-dev \
    libvpx1 \
    libvpx-dev \
    libfreetype6 \
    libfreetype6-dev \
    libt1-5 \
    libt1-dev \
    libgmp10 \
    libgmp-dev \
    libicu48 \
    libicu-dev \
    mcrypt \
    libmcrypt4 \
    libmcrypt-dev \
    libpspell-dev \
    libedit2 \
    libedit-dev \
    libsnmp15 \
    libsnmp-dev \
    libxslt1.1 \
    libxslt1-dev
        
</code></pre>

<p>And now the configure</p>

<pre class="line-numbers">
    <code class="language-shell">

    ./configure \
    --prefix=/usr/local/php \
    --with-apxs2=/usr/local/apache2/bin/apxs \
    --enable-fpm \
    --with-fpm-user=www-data \
    --with-fpm-group=www-data \
    --with-config-file-path=/usr/local/php/conf \
    --with-config-file-scan-dir=/usr/local/php/conf.d \
    --enable-debug \
    --with-openssl \
    --with-kerberos \
    --with-zlib \
    --enable-calendar \
    --with-curl \
    --with-curlwrappers \
    --with-enchant \
    --enable-exif \
    --enable-ftp \
    --with-gd \
    --with-jpeg-dir=/usr \
    --with-png-dir=/usr \
    --with-vpx-dir=/usr \
    --with-freetype-dir=/usr \
    --with-t1lib \
    --enable-exif \
    --enable-gd-native-ttf \
    --enable-gd-jis-conv \
    --with-gettext \
    --with-gmp \
    --with-mhash \
    --enable-intl \
    --enable-mbstring \
    --with-mcrypt \
    --with-mysql \
    --with-mysqli \
    --enable-pcntl \
    --with-pdo-mysql \
    --with-pdo-pgsql \
    --with-pgsql \
    --with-pspell \
    --with-libedit \
    --with-readline \
    --enable-shmop \
    --with-snmp \
    --enable-soap \
    --enable-sockets \
    --enable-sysvmsg \
    --enable-sysvshm \
    --with-xsl \
    --enable-zip \
    --with-pear \
    --enable-zend-signals \
    --enable-maintainer-zts

</code>
</pre>

<p>Once these are done then we follow the standard make process. Notice we are also running make testâ€¦ very important as it givges more data for the developers to work with.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Make PHP
make &amp;&amp; make test &amp;&amp; make install 1

make &amp;&amp; make test &amp;&amp; make install
</code></pre></div></div>

<p>The next thing is configuring your php.ini file as the install doesnâ€™t have one yet so we copy either the production or development default from the source code to the new conf dir and edit to suit your needs.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Shell
cp {&lt;a href="http://www.php.net/" title="PHP" target="_blank"&gt;php&lt;/a&gt;-source-dir}/&lt;a href="http://www.php.net/" title="PHP" target="_blank"&gt;php&lt;/a&gt;.ini-(development|production) /usr/local/&lt;a href="http://www.php.net/" title="PHP" target="_blank"&gt;php&lt;/a&gt;/conf 1

cp {php-source-dir}/php.ini-(development|production) /usr/local/php/conf
</code></pre></div></div>

<p>Thats it. All ready to rollâ€¦ almost, this installation is the one I use for use with a webserver so you will want to add the appropriate directives to apache.</p>

<p>Shell
    LoadModule php5_module modules/libphp5.so AddHandler php5-script .<a href="http://www.php.net/" title="PHP" target="_blank">php</a> AddType text/html .<a href="http://www.php.net/" title="PHP" target="_blank">php</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>LoadModule php5_module        modules/libphp5.so
 
AddHandler php5-script .php
AddType text/html .php
</code></pre></div></div>
:ET